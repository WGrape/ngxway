#!/usr/bin/env bash

# start time
start=$(date +%s)

# go to the root directory of ngxway.
NGXWAY_BASE_PATH=$(cd `dirname $0`; cd ..; pwd)
cd $NGXWAY_BASE_PATH

# require the common shell scripts.
. $NGXWAY_BASE_PATH/scripts/common.sh

# check the ab is installed.
if ! command -v ab &> /dev/null; then
  print_error "error: please install ab first"
  echo -e "for help: https://github.com/WGrape/ngxway/issues/75"
  exit 1
fi

# check the ngxway is running
isRunning=$(is_ngxway_running)
if [ $isRunning == "no" ]; then
  print_error "error: please start ngxway first"
  exit 1
fi

# generate the urls.
compute_signed_request
addrUrl=${signedURL}
if [ -n "$1" ] && [ "$1" == "api" ]; then
  addrUrl=${signedAPI}
fi

# get information about cpu and memory
cpuMemory=$(print_cpu_memory)

# initial
cat $benchmark_template_file > $benchmark_temp_html_file

# declare the testcases.
caseList=(
  "-n 10000 -c 32"
  "-n 10000 -c 64"
  "-n 10000 -c 128"
  "-n 10000 -c 256"
  "-n 10000 -c 512"
  "-n 10000 -c 1024"
  "-n 10000 -c 1200"

  "-n 100000 -c 32"
  "-n 100000 -c 64"
  "-n 100000 -c 128"
  "-n 100000 -c 256"
  "-n 100000 -c 512"
  "-n 100000 -c 1024"
  "-n 100000 -c 1200"
)
maxQPS=0
maxTestIndex=0
maxTestArray=()

# run the caseList.
for i in "${!caseList[@]}"; do
  number=$((i+1))
  print_info "The test no.${number} start"

  run_benchmark_test "${caseList[$i]}" "${addrUrl}"
  if [ $? -ne 0 ]; then
    print_error "The test no.${number} end"
  else
    concurrency=`cat ${apache_bench_temp_file} | grep 'Concurrency Level' | awk '{print $3}'`

    command="ab -r ${caseList[$i]} -k ${addrUrl}"
    command=$(echo $command | sed 's/[\/&]/\\&/g')

    completeRequests=`cat ${apache_bench_temp_file} | grep 'Complete requests' | awk '{print $3}'`
    failedRequests=`cat ${apache_bench_temp_file} | grep 'Failed requests' | awk '{print $3}'`
    keepaliveRequests=`cat ${apache_bench_temp_file} | grep 'Keep-Alive requests' | awk '{print $3}'`

    totalTransferred=`cat ${apache_bench_temp_file} | grep 'Total transferred' | awk '{print $3}'`
    htmlTransferred=`cat ${apache_bench_temp_file} | grep 'HTML transferred' | awk '{print $3}'`

    qps=`cat ${apache_bench_temp_file} | grep 'Requests per second' | awk '{print int($4)}'`

    p90=`cat ${apache_bench_temp_file} | grep '90%' | awk '{print int($2)}'`
    p95=`cat ${apache_bench_temp_file} | grep '95%' | awk '{print int($2)}'`
    p99=`cat ${apache_bench_temp_file} | grep '99%' | awk '{print int($2)}'`

    echo -e "++++++++++++Test Report++++++++++++"
    echo -e "Concurrency = " $concurrency
    echo -e "Complete requests =" $completeRequests
    echo -e "Failed requests =" $failedRequests
    echo -e "Keep-Alive requests =" $keepaliveRequests
    echo -e "Total transferred =" $totalTransferred "bytes"
    echo -e "HTML transferred =" $htmlTransferred "bytes"
    echo -e "QPS = " $qps "/s"
    echo -e "P90 = " $p90 "ms"
    echo -e "P95 = " $p95 "ms"
    echo -e "P99 = " $p99 "ms"
    echo -e "++++++++++++Test Report++++++++++++"

    sed -e "s/{{${number}th_Id}}/${number}/g" \
        -e "s/{{${number}th_Command}}/${command}/g" \
        -e "s/{{${number}th_Concurrency}}/${concurrency}/g" \
        -e "s/{{${number}th_QPS}}/${qps}/g" \
        -e "s/{{${number}th_Complete_requests}}/${completeRequests}/g" \
        -e "s/{{${number}th_Failed_requests}}/${failedRequests}/g" \
        -e "s/{{${number}th_Keep-Alive_requests}}/${keepaliveRequests}/g" \
        -e "s/{{${number}th_Total_transferred}}/${totalTransferred}/g" \
        -e "s/{{${number}th_HTML_transferred}}/${htmlTransferred}/g" \
        -e "s/{{${number}th_P90}}/${p90}/g" \
        -e "s/{{${number}th_P95}}/${p95}/g" \
        -e "s/{{${number}th_P99}}/${p99}/g" \
        $benchmark_temp_html_file > $benchmark_html_file
    cat $benchmark_html_file > $benchmark_temp_html_file

    if [ $qps -gt $maxQPS ]; then
      maxQPS=$qps
      maxTestIndex=$i
      maxTestArray=()
      maxTestArray+=("Concurrency=$concurrency")
      maxTestArray+=("Complete requests=$completeRequests")
      maxTestArray+=("Failed requests=$failedRequests")
      maxTestArray+=("Keep-Alive requests=$keepaliveRequests")
      maxTestArray+=("Total transferred=$totalTransferred")
      maxTestArray+=("HTML transferred=$htmlTransferred")
      maxTestArray+=("QPS=$qps")
      maxTestArray+=("P90=$p90")
      maxTestArray+=("P95=$p95")
      maxTestArray+=("P99=$p99")
    fi
  fi
done

sed -e "s/{{cpuMemory}}/$cpuMemory/g" -e "s/{{maxQPS}}/$maxQPS/g" $benchmark_temp_html_file > $benchmark_html_file
cat $benchmark_html_file > $benchmark_temp_html_file

# end time
end=$(date +%s)

cat $benchmark_template_file > $benchmark_temp_html_file

echo -e "\n------------------------------------------------------------------"
echo "The benchmark testing of ngxway is end, total cost $((end-start)) seconds."
echo -e "------------------------------------------------------------------\n"

print_success "The benchmark test is end, max QPS = ${maxQPS}\n"

print_success "++++++++++++The Performance Report++++++++++++"
for field in "${!maxTestArray[@]}"; do
  print_success "${field} = ${maxTestArray[$field]}"
done
print_success "++++++++++++The Performance Report++++++++++++"

# try to open it on the chrome.
open -a "/Applications/Google Chrome.app" $benchmark_html_file > /dev/null 2>&1
