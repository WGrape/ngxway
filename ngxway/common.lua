module = {}

-- Check the timestamp is valid.
-- The params passed by the user.
function module:check_params(sign, timestamp, timestamp_number)
  if sign == nil or timestamp == nil or timestamp_number == nil or timestamp_number <= 0 then
    return false
  end

  return true
end

-- Compute the signature of request url.
function module:compute_sign(timestamp_string, timestamp_number)
  -- The secret passed by the front end cannot be defined by constants, but generated by certain function rules to prevent the client code from being reversely parsed.
  local secret = "ngxway"

  -- sign = md5(md5("timestamp_secret_timestamp"))
  -- sign = Take the first [10, 25] bits of sign.
  local k = table.concat({ timestamp_string, "_", secret, "_", timestamp_string })
  local length = timestamp_number % 16 + 10
  local md5K = ngx.md5(k)
  return md5K:sub(1, length)
end

-- Check the url signature is right.
function module:check_sign(sign, timestamp_string, timestamp_number)
  -- Generate real signatures.
  local realSign = module:compute_sign(timestamp_string, timestamp_number)

  -- Check whether the signatures are consistent.
  return realSign == sign
end

-- Check the timestamp is valid.
function module:check_timestamp(now_timestamp, timestamp_number)
  -- If the timestamp difference is within 1 hour, it is considered a normal request, otherwise it is considered a malicious request.
  return now_timestamp - timestamp_number < 3600
end

return module
